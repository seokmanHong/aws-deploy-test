version: 0.2

env:
  exported-variables:
    - ARG ARG_FPM_CONTAINER
    - ARG ARG_PHP_FPM_PORT

phases:
  install:
    runtime-versions:
      docker: 19
  pre_build:
    commands:
      - echo Composer downloading package
      - composer install --no-progress --ignore-platform-reqs
      - echo $APP_ENV $AWS_DEFAULT_REGION $IMAGE_TAG
      - cp .env.$APP_ENV .env
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
#      - $(aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin "$(aws sts get-caller-identity --query Account --output text).dkr.ecr.ap-northeast-2.amazonaws.com")
      - REPOSITORY_URI_NGINX=323538435273.dkr.ecr.ap-northeast-2.amazonaws.com/advertiser-nginx
      - REPOSITORY_URI_PHP_FPM=323538435273.dkr.ecr.ap-northeast-2.amazonaws.com/advertiser-php-fpm
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - echo $REPOSITORY_URI_NGINX:$IMAGE_TAG
      - docker build -t $REPOSITORY_URI_NGINX:$IMAGE_TAG -f nginx.Dockerfile .
      - docker tag $REPOSITORY_URI_NGINX:$IMAGE_TAG $REPOSITORY_URI_NGINX:$IMAGE_TAG
      - echo $REPOSITORY_URI_PHP_FPM:$IMAGE_TAG
      - docker build -t $REPOSITORY_URI_PHP_FPM:$IMAGE_TAG -f php.Dockerfile .
      - docker tag $REPOSITORY_URI_PHP_FPM:$IMAGE_TAG $REPOSITORY_URI_PHP_FPM:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI_NGINX:$IMAGE_TAG
      - docker push $REPOSITORY_URI_PHP_FPM:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"Advertiser-nginx-container","imageUri":"%s"},{"name":"Advertiser-php-fpm-container","imageUri":"%s"}]' $REPOSITORY_URI_NGINX:$IMAGE_TAG $REPOSITORY_URI_PHP_FPM:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
